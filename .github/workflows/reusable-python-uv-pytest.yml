name: Python Tests

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to test against. Currently, this only supports one version per workflow run.'
        required: false
        type: string
        default: '3.11'
      asdf-install:
        description: 'Whether to install supplementary tools from .tool-versions'
        required: false
        type: boolean
        default: true
      run-ruff:
        description: 'Run Ruff for linting and formatting checks'
        required: false
        type: boolean
        default: true
      report-coverage:
        description: 'Report on code coverage with a comment on the PR'
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "${{ inputs.python-version }}" ]
    steps:
    - uses: actions/checkout@8edcb1bdb4e267140fa742c62e395cd74f332709

    - name: Restore cached asdf tools
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684
      if: ${{ inputs.asdf-install }}
      id: cache
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-tool-versions-${{ hashFiles('.tool-versions') }}

    - name: asdf install
      if: ${{ inputs.asdf-install }}
      uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302 

    - name: Cache asdf tools
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684
      id: save-cache
      if: inputs.asdf-install == 'true' && steps.cache.outputs.cache-hit != 'true'
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-tool-versions-${{ hashFiles('.tool-versions') }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
      with:
        python-version: ${{ matrix.python-version }}

    - name: Ruff check
      if: ${{ inputs.run-ruff }}
      run: |
        uvx ruff check

    - name: Test with pytest
      run: |
        uv run pytest

    - name: Report coverage
      if: ${{ inputs.report-coverage }}
      uses: MishaKav/pytest-coverage-comment@13d3c18e21895566c746187c9ea74736372e5e91
      with:
        pytest-xml-coverage-path: ./htmlcov/coverage.xml
        title: Coverage report for Python ${{ matrix.python-version }}
        remove-link-from-badge: true
        unique-id-for-comment: ${{ matrix.python-version }}
        coverage-path-prefix: src/
