name: Python Tests

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to test against. Currently, this only supports one version per workflow run.'
        required: false
        type: string
        default: '3.11'
      asdf-install:
        description: 'Whether to install supplementary tools from .tool-versions'
        required: false
        type: boolean
        default: true
      lcaf-makefile-setup:
        description: 'Whether to set the environment up for the LCAF Makefile'
        required: false
        type: boolean
        default: false
      lcaf-aws-region:
        description: 'AWS region to use for LCAF Makefile setup. Ignored if lcaf-makefile-setup is false.'
        required: false
        type: string
        default: 'us-east-2'
      run-ruff:
        description: 'Run Ruff for linting and formatting checks'
        required: false
        type: boolean
        default: true
      report-coverage:
        description: 'Report on code coverage with a comment on the PR'
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "${{ inputs.python-version }}" ]
    steps:
    - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

    - name: Restore cached asdf tools
      uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830
      if: ${{ inputs.asdf-install }}
      id: cache
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-tool-versions-${{ hashFiles('.tool-versions') }}

    - name: asdf install
      if: ${{ inputs.asdf-install }}
      uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302 

    - name: Cache asdf tools
      uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830
      id: save-cache
      if: ${{ inputs.asdf-install && steps.cache.outputs.cache-hit != 'true' }}
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-tool-versions-${{ hashFiles('.tool-versions') }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Repository for Makefile
      if: ${{ inputs.lcaf-makefile-setup }}
      # Ensure the 'repo' tool is installed, set up git to make the Makefile happy
      shell: bash
      run: |
        mkdir -p ~/.local/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.local/bin/repo
        chmod +x ~/.local/bin/repo
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        set -x
        git config --global user.name "GitHub Actions"
        git config --global user.email "noreply@launch.nttdata.com"
        export AWS_REGION=${{ inputs.lcaf-aws-region }}

    - name: Ruff check
      if: ${{ inputs.run-ruff }}
      run: |
        uvx ruff check

    - name: Test with pytest
      run: |
        uv run pytest

    - name: Report coverage
      if: ${{ inputs.report-coverage }}
      uses: MishaKav/pytest-coverage-comment@9638e4b1448019aba40c4aaaa1ade87a9f211aa1
      with:
        pytest-xml-coverage-path: ./htmlcov/coverage.xml
        title: Coverage report for Python ${{ matrix.python-version }}
        remove-link-from-badge: true
        unique-id-for-comment: ${{ matrix.python-version }}
        coverage-path-prefix: src/
