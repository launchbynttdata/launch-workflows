name: Deploy Terragrunt Environment

on:
  workflow_call:
    inputs:
      git_branch:
        description: 'Branch triggering this destroy.'
        required: true
        type: string
      tf_version:
          description: 'Version of Terraform to utilize'
          required: true
          default: '1.5.5'
          type: string
      tg_version:
        description: 'Version of Terragrunt to utilize'
        required: true
        default: '0.54.11'
        type: string
      gh_environment:
        description: 'GitHub Environment to deploy to (e.g. test, production). If not supplied, will be set from the environment input.'
        required: false
        type: string
      environment:
        description: 'Environment (subfolder of platform, e.g. test) to deploy'
        required: true
        type: string
      region:
        description: 'Region within the environment (e.g. eastus2) to deploy'
        required: true
        type: string
      env_id:
        description: 'Instance within the region (e.g. 000) to deploy.'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: "Plan & Deploy ${{ inputs.environment }}/${{ inputs.region }}/${{ inputs.env_id }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.gh_environment || inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Azure Login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5
        with:
          client-id: ${{ secrets.TERRAGRUNT_DEPLOY_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.TERRAGRUNT_DEPLOY_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.TERRAGRUNT_DEPLOY_AZURE_SUBSCRIPTION_ID }}

      - name: "Set default Terraform Tags"
        id: set-tags
        run: |
            set -x
            echo "TF_VAR_organization_tag=${{ github.repository_owner }}" >> "$GITHUB_OUTPUT"
            echo "TF_VAR_repository_tag=$(echo "${{ github.repository }}" | cut -d "/" -f 2)" >> "$GITHUB_OUTPUT"
            echo "TF_VAR_commit_hash_tag=${{ github.sha }}" >> "$GITHUB_OUTPUT"
            echo "TF_VAR_branch_tag=${{ inputs.git_branch }}" >> "$GITHUB_OUTPUT"

      - name: Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@aee21a7df999be8b471c2a8564c6cd853cb674e1
        env:
            AWS_REGION: ${{ inputs.region }}
            INPUT_PRE_EXEC_0: |
              sudo apt update -yqq && sudo apt install python3 -yqq
            TF_VAR_organization_tag: ${{ steps.set-tags.outputs.TF_VAR_organization_tag }}
            TF_VAR_repository_tag: ${{ steps.set-tags.outputs.TF_VAR_repository_tag }}
            TF_VAR_commit_hash_tag: ${{ steps.set-tags.outputs.TF_VAR_commit_hash_tag }}
            TF_VAR_branch_tag: ${{ steps.set-tags.outputs.TF_VAR_branch_tag }}
        with:
          tf_version: ${{ inputs.tf_version }}
          tg_version: ${{ inputs.tg_version }}
          tg_dir: 'platform/${{ inputs.environment }}/${{ inputs.region }}/${{ inputs.env_id }}'
          tg_command: 'plan -out=${{ inputs.environment }}-${{ inputs.region }}-${{ inputs.env_id }}.tfplan'

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@aee21a7df999be8b471c2a8564c6cd853cb674e1
        env:
            AWS_REGION: ${{ inputs.region }}
            INPUT_PRE_EXEC_0: |
              sudo apt update -yqq && sudo apt install python3 -yqq
            TF_VAR_organization_tag: ${{ steps.set-tags.outputs.TF_VAR_organization_tag }}
            TF_VAR_repository_tag: ${{ steps.set-tags.outputs.TF_VAR_repository_tag }}
            TF_VAR_commit_hash_tag: ${{ steps.set-tags.outputs.TF_VAR_commit_hash_tag }}
            TF_VAR_branch_tag: ${{ steps.set-tags.outputs.TF_VAR_branch_tag }}
        with:
          tf_version: ${{ inputs.tf_version }}
          tg_version: ${{ inputs.tg_version }}
          tg_dir: 'platform/${{ inputs.environment }}/${{ inputs.region }}/${{ inputs.env_id }}'
          tg_command: 'apply ${{ inputs.environment }}-${{ inputs.region }}-${{ inputs.env_id }}.tfplan'
